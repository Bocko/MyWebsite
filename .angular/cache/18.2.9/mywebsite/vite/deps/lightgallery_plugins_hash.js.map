{
  "version": 3,
  "sources": ["../../../../../../node_modules/lightgallery/plugins/hash/lg-hash.es5.js"],
  "sourcesContent": ["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\nvar lGEvents = {\n  afterAppendSlide: 'lgAfterAppendSlide',\n  init: 'lgInit',\n  hasVideo: 'lgHasVideo',\n  containerResize: 'lgContainerResize',\n  updateSlides: 'lgUpdateSlides',\n  afterAppendSubHtml: 'lgAfterAppendSubHtml',\n  beforeOpen: 'lgBeforeOpen',\n  afterOpen: 'lgAfterOpen',\n  slideItemLoad: 'lgSlideItemLoad',\n  beforeSlide: 'lgBeforeSlide',\n  afterSlide: 'lgAfterSlide',\n  posterClick: 'lgPosterClick',\n  dragStart: 'lgDragStart',\n  dragMove: 'lgDragMove',\n  dragEnd: 'lgDragEnd',\n  beforeNextSlide: 'lgBeforeNextSlide',\n  beforePrevSlide: 'lgBeforePrevSlide',\n  beforeClose: 'lgBeforeClose',\n  afterClose: 'lgAfterClose',\n  rotateLeft: 'lgRotateLeft',\n  rotateRight: 'lgRotateRight',\n  flipHorizontal: 'lgFlipHorizontal',\n  flipVertical: 'lgFlipVertical',\n  autoplay: 'lgAutoplay',\n  autoplayStart: 'lgAutoplayStart',\n  autoplayStop: 'lgAutoplayStop'\n};\nvar hashSettings = {\n  hash: true,\n  galleryId: '1',\n  customSlideName: false\n};\nvar Hash = /** @class */function () {\n  function Hash(instance, $LG) {\n    // get lightGallery core plugin instance\n    this.core = instance;\n    this.$LG = $LG;\n    // extend module default settings with lightGallery core settings\n    this.settings = __assign(__assign({}, hashSettings), this.core.settings);\n    return this;\n  }\n  Hash.prototype.init = function () {\n    var _this = this;\n    if (!this.settings.hash) {\n      return;\n    }\n    this.oldHash = window.location.hash;\n    setTimeout(function () {\n      _this.buildFromHash();\n    }, 100);\n    // Change hash value on after each slide transition\n    this.core.LGel.on(lGEvents.afterSlide + \".hash\", this.onAfterSlide.bind(this));\n    this.core.LGel.on(lGEvents.afterClose + \".hash\", this.onCloseAfter.bind(this));\n    // Listen hash change and change the slide according to slide value\n    this.$LG(window).on(\"hashchange.lg.hash.global\" + this.core.lgId, this.onHashchange.bind(this));\n  };\n  Hash.prototype.onAfterSlide = function (event) {\n    var slideName = this.core.galleryItems[event.detail.index].slideName;\n    slideName = this.settings.customSlideName ? slideName || event.detail.index : event.detail.index;\n    if (history.replaceState) {\n      history.replaceState(null, '', window.location.pathname + window.location.search + '#lg=' + this.settings.galleryId + '&slide=' + slideName);\n    } else {\n      window.location.hash = 'lg=' + this.settings.galleryId + '&slide=' + slideName;\n    }\n  };\n  /**\r\n   * Get index of the slide from custom slideName. Has to be a public method. Used in hash plugin\r\n   * @param {String} hash\r\n   * @returns {Number} Index of the slide.\r\n   */\n  Hash.prototype.getIndexFromUrl = function (hash) {\n    if (hash === void 0) {\n      hash = window.location.hash;\n    }\n    var slideName = hash.split('&slide=')[1];\n    var _idx = 0;\n    if (this.settings.customSlideName) {\n      for (var index = 0; index < this.core.galleryItems.length; index++) {\n        var dynamicEl = this.core.galleryItems[index];\n        if (dynamicEl.slideName === slideName) {\n          _idx = index;\n          break;\n        }\n      }\n    } else {\n      _idx = parseInt(slideName, 10);\n    }\n    return isNaN(_idx) ? 0 : _idx;\n  };\n  // Build Gallery if gallery id exist in the URL\n  Hash.prototype.buildFromHash = function () {\n    // if dynamic option is enabled execute immediately\n    var _hash = window.location.hash;\n    if (_hash.indexOf('lg=' + this.settings.galleryId) > 0) {\n      // This class is used to remove the initial animation if galleryId present in the URL\n      this.$LG(document.body).addClass('lg-from-hash');\n      var index = this.getIndexFromUrl(_hash);\n      this.core.openGallery(index);\n      return true;\n    }\n  };\n  Hash.prototype.onCloseAfter = function () {\n    // Reset to old hash value\n    if (this.oldHash && this.oldHash.indexOf('lg=' + this.settings.galleryId) < 0) {\n      if (history.replaceState) {\n        history.replaceState(null, '', this.oldHash);\n      } else {\n        window.location.hash = this.oldHash;\n      }\n    } else {\n      if (history.replaceState) {\n        history.replaceState(null, document.title, window.location.pathname + window.location.search);\n      } else {\n        window.location.hash = '';\n      }\n    }\n  };\n  Hash.prototype.onHashchange = function () {\n    if (!this.core.lgOpened) return;\n    var _hash = window.location.hash;\n    var index = this.getIndexFromUrl(_hash);\n    // it galleryId doesn't exist in the url close the gallery\n    if (_hash.indexOf('lg=' + this.settings.galleryId) > -1) {\n      this.core.slide(index, false, false);\n    } else if (this.core.lGalleryOn) {\n      this.core.closeGallery();\n    }\n  };\n  Hash.prototype.closeGallery = function () {\n    if (this.settings.hash) {\n      this.$LG(document.body).removeClass('lg-from-hash');\n    }\n  };\n  Hash.prototype.destroy = function () {\n    this.core.LGel.off('.lg.hash');\n    this.core.LGel.off('.hash');\n    this.$LG(window).off(\"hashchange.lg.hash.global\" + this.core.lgId);\n  };\n  return Hash;\n}();\nexport default Hash;\n"],
  "mappings": "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",
  "names": ["__assign", "Hash"]
}
